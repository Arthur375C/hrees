class Hrees {
  constructor(gravity = 0.98) {
    this.gravity = gravity;
    this.objects = [];
  }

  addObject(obj) {
    obj.vx = obj.vx || 0;
    obj.vy = obj.vy || 0;
    this.objects.push(obj);
  }

  update() {
    for (let obj of this.objects) {
      // aplica gravidade
      obj.vy += this.gravity;

      // atualiza posição
      obj.x += obj.vx;
      obj.y += obj.vy;

      // colisão com chão
      if (obj.y + obj.height > obj.canvasHeight) {
        obj.y = obj.canvasHeight - obj.height;
        obj.vy *= -0.5; // quique
      }

      // colisão parede esquerda
      if (obj.x < 0) {
        obj.x = 0;
        obj.vx *= -0.5;
      }

      // colisão parede direita
      if (obj.x + obj.width > obj.canvasWidth) {
        obj.x = obj.canvasWidth - obj.width;
        obj.vx *= -0.5;
      }
    }
  }
}

// Setup canvas
const canvas = document.getElementById('game');
const ctx = canvas.getContext('2d');

const physics = new Hrees(0.5); // gravidade mais leve

const box = { x: 100, y: 50, vx: 2, vy: 0, width: 50, height: 50, canvasWidth: canvas.width, canvasHeight: canvas.height };
physics.addObject(box);

// Animação
function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  physics.update();

  // desenha box
  ctx.fillStyle = 'red';
  ctx.fillRect(box.x, box.y, box.width, box.height);

  requestAnimationFrame(animate);
}

animate();
